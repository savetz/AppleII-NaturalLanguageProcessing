-------------------------------------------- SCREEN 000
( MARCUS PARSER   8/2/85 )              
                                        
143 158 THRU                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 001
( MARCUS PARSER   8/2/85 )              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 002
( MARCUS PARSER   8/2/85 )              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 003
( TEST COMPILER   8/2/85 )              
                                        
: PARSER ;                              
                                        
VARIABLE CNODE                          
( current node )                        
                                        
VARIABLE BUFFER#                        
( What buffer are we looking at? 1 =    
  1st, 2 = 2nd, 3 = 3rd )               
                                        
VARIABLE LAST-CHAR                      
( If the last character of a word is a  
punctuation character, store it here. ) 
                                        
VARIABLE FIRST-CHAR                     
( If the first character of a word is ",
', (, or *, then store it here )        
                                        
VARIABLE WORD-CFA                       
( Temporary storage for CFA of word )   
                                        
                                        
                                        
-------------------------------------------- SCREEN 004
( TEST COMPILER   8/2/85 )              
                                        
VARIABLE HEAD                           
( Adr of features list. )               
                                        
VARIABLE AND/ORS                        
( Specifies how many AND/OR relations   
  in the features list. )               
                                        
VARIABLE AND/OR-FLAG                    
( 1 if AND relations in the features    
  list; 0 if OR relations. )            
                                        
1 AND/OR-FLAG !                         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 005
( TEST COMPILER   8/2/85 )              
                                        
: (LOOK-UP)   ( table adr value --  )   
   OVER       ( found adr/table adr )   
   COUNT                                
   OVER + SWAP DO                       
                 DUP I C@ =             
                 IF                     
                   SWAP DROP            
                   I SWAP LEAVE         
                 THEN                   
               LOOP DROP ;              
                                        
: LOOK-UP                               
    CREATE C,                           
    DOES>                               
      DUP ROT (LOOK-UP) SWAP - ;        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 006
( TEST COMPILER   8/2/85 )              
                                        
: (2LOOK-UP)    ( table adr value --  ) 
    OVER        ( found-adr/table adr ) 
    COUNT                               
    OVER + SWAP DO                      
                  DUP I @ =             
                  IF                    
                    SWAP DROP           
                    I SWAP LEAVE        
                  THEN                  
                 2 +LOOP DROP ;         
                                        
: 2LOOK-UP  ( defining: #entries -- )   
    CREATE 2* C,                        
    DOES>                               
      DUP ROT (2LOOK-UP) SWAP - 1+ 2/ ; 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 007
( TEST COMPILER   8/2/85 )              
                                        
12 LOOK-UP PUNCTUATION 33 C, 34 C, 39 C,
                       40 C, 41 C, 42 C,
                       44 C, 46 C, 58 C,
                       59 C, 61 C, 63 C,
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 008
( TEST COMPILER   8/2/85 )              
                                        
VOCABULARY PATTERNS                     
                                        
PATTERNS DEFINITIONS                    
                                        
: [ ;                                   
                                        
: ] ;                                   
                                        
: ( ;                                   
                                        
: ) ;                                   
                                        
                                        
: ISN'T    NOT ;                        
: NONE     NOT ;                        
: ANY      0 AND/OR-FLAG !  ;           
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 009
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
8 2LOOK-UP OPERATORS ' NOT   CFA ,      
                     ' ISN'T CFA ,      
                     ' NONE  CFA ,      
                     ' AND   CFA ,      
                     ' OR    CFA ,      
                     ' ANY   CFA ,      
                     ' (     CFA ,      
                     ' )     CFA ,      
                                        
: T                                     
   CNODE @ IF                           
             1                          
           ELSE                         
             0                          
           THEN ;                       
                                        
FORTH DEFINITIONS                       
                                        
( Stack comment for T:  -- f )          
                                        
-------------------------------------------- SCREEN 010
( TEST COMPILER   8/2/85 )              
                                        
( PRIORITIES is a defining word.        
  Given number returned by OPERATORS    
  on the stack, it returns the priority 
  of the operator. )                    
                                        
PATTERNS DEFINITIONS                    
                                        
: PRIORITIES                            
   CREATE                               
     0 ,                                
     0 DO                               
         BL WORD NUMBER DROP ,          
       LOOP                             
   DOES>                                
     SWAP 2* + @ ;                      
                                        
8 PRIORITIES (ISP) 3 3 3 2 1 1 0 0      
8 PRIORITIES (ICP) 4 4 4 2 1 1 4 4      
                                        
FORTH DEFINITIONS                       
                                        
                                        
-------------------------------------------- SCREEN 011
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
: ISP                                   
   OPERATORS                            
   (ISP) ;                              
                                        
: ICP                                   
   OPERATORS                            
   (ICP) ;                              
                                        
FORTH DEFINITIONS                       
                                        
EXIT                                    
Given CFA of FORTH word, ISP returns the
in-stack priority (see Horowitz and     
Sahni, Fundamentals of Data Structures, 
Computer Science Press, 1976, p 96) if  
the word is defined as an operator by   
OPERATORS, else it returns 0. ICP       
returns the in-coming priority of the   
operator.                               
                                        
-------------------------------------------- SCREEN 012
( TEST COMPILER   8/2/85 )              
                                        
( Words to ignore )                     
                                        
PATTERNS DEFINITIONS                    
                                        
: IS  ;                                 
: AN  ;                                 
: A   ;                                 
: THE ;                                 
                                        
4 2LOOK-UP IGNORE ' IS  CFA ,           
                  ' AN  CFA ,           
                  ' A   CFA ,           
                  ' THE CFA ,           
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 013
( TEST COMPILER   8/2/85 )              
                                        
EXIT                                    
                                        
Some of the words in the test input     
strings will have punctuation characters
in the first or last character positions
-- e.g. *HAVE or VERB, etc.             
                                        
The following set of words strips these 
characters and stores them in either    
FIRST-CHAR or LAST-CHAR for reference   
by the test compiler. If such a         
uation character is found, the count of 
the word is decremented and, if the     
punctuation character was in the first  
character position, the remaining       
characters are shifted left.            
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 014
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
                                        
4 LOOK-UP FIRST-CHARS 34 C, 39 C,       
                      40 C, 42 C,       
                                        
9 LOOK-UP LAST-CHARS  33 C, 34 C, 39 C, 
                      41 C, 44 C, 46 C, 
                      58 C, 59 C, 63 C, 
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 015
( TEST COMPILER   8/2/85 )              
                                        
( DEC-COUNT:   adr -- )                 
( @FIRST-CHAR: adr -- )                 
( @LAST-CHAR:  adr -- )                 
                                        
PATTERNS DEFINITIONS                    
                                        
: DEC-COUNT                             
   DUP C@ DUP 1 > IF                    
                    1- SWAP C!          
                  ELSE                  
                    DROP DROP           
                  THEN ;                
                                        
: @FIRST-CHAR                           
   1+ C@ FIRST-CHAR ! ;                 
                                        
: @LAST-CHAR                            
   DUP C@ + C@ LAST-CHAR ! ;            
                                        
FORTH DEFINITIONS                       
                                        
                                        
-------------------------------------------- SCREEN 016
( TEST COMPILER   8/2/85 )              
                                        
( !SP:  adr -- )                        
( SHIFT-LCHARS: adr -- )                
                                        
PATTERNS DEFINITIONS                    
                                        
: SHIFT-LCHARS                          
   DUP COUNT                            
   OVER 1+                              
   ROT ROT                              
   BMOVE                                
   DEC-COUNT ;                          
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 017
( TEST COMPILER   8/2/85 )              
                                        
( GET-WORD: e.g. GET-WORD <WORD> )      
                                        
PATTERNS DEFINITIONS                    
                                        
: GET-WORD                              
   BL WORD                              
   DUP @FIRST-CHAR                      
   DUP @LAST-CHAR                       
   FIRST-CHAR @                         
   FIRST-CHARS IF                       
                  DUP SHIFT-LCHARS      
                THEN                    
   LAST-CHAR @                          
   LAST-CHARS  IF                       
                  DUP DEC-COUNT         
               THEN                     
   WORD-CFA ! ;                         
                                        
: Q GET-WORD WORD-CFA @ COUNT TYPE ;    
                                        
FORTH DEFINITIONS                       
                                        
-------------------------------------------- SCREEN 018
( TEST COMPILER   8/2/85 )              
                                        
                                        
PATTERNS DEFINITIONS                    
                                        
: FIND,                                 
   GET-WORD                             
   WORD-CFA @                           
   CONTEXT @ @ 2+                       
   CONTEXT @ 999 - <<FIND>              
   IF                                   
     DROP CFA  WORD-CFA !               
   ELSE                                 
     0 WORD-CFA !                       
   THEN ;                               
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 019
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
: ,TO-OUT                               
   BEGIN                                
    DEPTH                               
   WHILE                                
    ,                                   
   REPEAT ;                             
                                        
: ,TO-(                                 
   BEGIN                                
    DUP ' ( CFA = NOT                   
   WHILE                                
    ,                                   
   REPEAT DROP ;                        
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 020
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
: ,TO-ISP<ICP                           
   BEGIN                                
    DEPTH 1 > IF                        
               DDUP                     
               ICP SWAP ISP <           
              ELSE                      
               0                        
              THEN                      
   WHILE                                
    SWAP ,                              
   REPEAT ;                             
                                        
FORTH DEFINITIONS                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 021
( TEST COMPILER   8/2/85 )              
                                        
PATTERNS DEFINITIONS                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
