-------------------------------------------- SCREEN 000
( CGRAPH II LOAD SCREEN  LRP  1/27/85)  
                                        
151 166 THRU                            
180 182 THRU                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 011
( CGAPH    LRP   1/26/85 )              
                                        
: CGRAPH ;                              
                                        
0 CONSTANT FALSE                        
                                        
1 CONSTANT TRUE                         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 012
( LIST WORDS        LRP   1/26/85 )     
                                        
: GET  ( n -- adr of link )             
       ( Get link with n fields         
         from HERE.)                    
    DUP HERE SWAP 0 FILL                
        HERE SWAP ALLOT ;               
                                        
: PUT  ( list.adr  link.adr -- )        
    SWAP DDUP @ SWAP ! ( link <-        
                                <list>) 
              ! ;      ( list <- link ) 
                                        
: APPEND   ( le list -- )               
    OVER 0 SWAP !                       
    BEGIN DUP @ WHILE                   
    @ REPEAT ! ;                        
                                        
: #LIST   ( adr -- n )                  
     ( Given head of list, returns      
       no. elements in list. )          
   0 BEGIN    OVER @                    
     WHILE    1+   SWAP @ SWAP          
     REPEAT   SWAP DROP ;               
-------------------------------------------- SCREEN 013
( #LIST    LRP   1/26/85 )              
                                        
: POS  ( -- )                           
    ( Define POS )                      
    CREATE                              
    DOES> ;                             
                                        
: POS-PTR  ( node.adr -- )   4 + ;      
                                        
: !POS   ( pos node.adr -- )            
    POS-PTR ! ;                         
                                        
: @POS  ( node.adr -- ptr to pos )      
    POS-PTR  @ ;                        
                                        
: .POS   ( node.adr -- )                
   @POS NFA ID. ;                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 014
( POS  LRP  1/26/85 )                   
                                        
: CON-PTR   ( node.adr --  adr of ptr   
              to concept )              
    2+ ;                                
                                        
: !CONCEPT  ( adr of concept   node.adr 
              -- )                      
    CON-PTR ! ;                         
                                        
: @CONCEPT  ( node.adr -- ptr to        
              concept )                 
    CON-PTR @ ;                         
                                        
: .CONCEPT   ( node.adr -- )            
     @CONCEPT NFA ID. ;                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 015
( CONCEPTS      LRP     1/11/85 )       
                                        
: CONCEPT  ( -- )                       
    CREATE                              
      0 , 0 , 0 ,                       
    DOES> ;                             
                                        
: GRAPHS   ( adr -- adr1 )              
    0 + ;                               
                                        
: SUPERTYPES  ( adr -- adr1 )           
    2+ ;                                
                                        
: SUBTYPES    ( adr -- adr1 )           
    4 + ;                               
                                        
EXIT                                    
                                        
CONCEPT is a defining word to create    
concept headers in the FORTH            
dictionary -- e.g. CONCEPT UNICORN.     
UNICORN GRAPHS puts the address of the  
pointer to the graph list on the stack. 
                                        
-------------------------------------------- SCREEN 016
( CGRAPHS      LRP    1/11/85 )         
                                        
: VOCAB   ( -- )                        
    CREATE                              
      0 ,    ( Ptr to concepts list. )  
    DOES> ( Eventually put processing   
            word here ) ;               
                                        
EXIT                                    
                                        
VOCAB is a defining word to enter       
lexicon entries into the FORTH          
dictionary -- e.g. VOCAB unicorn.       
When the new word "unicorn" is executed 
the address of the head of the CONCEPTS 
list is put on the stack.               
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 017
( MEANS    LRP    1/13/85 )             
                                        
                                        
: MEANS  ( pos list.adr con.adr -- )    
     FIND 2+            ( con.adr )     
     OVER 6 GET  PUT       ( link )     
     OVER @  !CONCEPT                   
          @  !POS ;                     
                                        
                                        
                                        
EXIT                                    
                                        
MEANS links concept pointers to         
lexicon entries.                        
Example, NOUN cat MEANS ANIMAL. The     
lexicon entry can be linked to multiple 
concepts.                               
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 018
( MEANS?   LRP   1/27/85 )              
                                        
: MEANS?   ( adr -- )                   
    ( Given address of word in lexicon,)
    ( Traverse concept list. )          
    CR                                  
    BEGIN                               
       DUP @                            
    WHILE                               
       @ DUP          .CONCEPT          
         DUP 5 SPACES .POS              
         CR                             
    REPEAT DROP ;                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 019
( IS-A     LRP    1/13/85 )             
                                        
: IS-A         ( sub.adr  -- )          
   FIND 2+     ( sub.adr sup.adr -- )   
   DDUP SWAP SUPERTYPES DUP 4 GET PUT   
                        @  !CONCEPT     
             SUBTYPES   DUP 4 GET PUT   
                        @ !CONCEPT  ;   
                                        
                                        
                                        
                                        
EXIT                                    
                                        
IS-A links together the                 
SUBTYPE/SUPERTYPE lists. Example,       
FELINE IS-A ANIMAL.                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 020
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 021
( TYPES?  DENOTES?   LRP   1/27/85 )    
                                        
VARIABLE ROOT                           
                                        
VARIABLE NODE.PTR                       
                                        
VARIABLE LIST.PTR                       
                                        
: GRAPHLIST   ( -- )                    
    ' GRAPHS LIST.PTR ! ;               
                                        
: SUBLIST  ( -- )                       
    ' SUBTYPES LIST.PTR ! ;             
                                        
: SUPLIST  ( -- )                       
    ' SUPERTYPES LIST.PTR ! ;           
                                        
: @LIST   ( concept.adr -- list.adr )   
    LIST.PTR @ CFA EXECUTE ;            
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 022
( TYPES?   DENOTES?   LRP   1/27/85 )   
                                        
: LCHILD   ( adr1 -- adr2 )             
    @ ;                                 
                                        
: RCHILD   ( adr1 -- adr2 )             
    @CONCEPT @LIST @ ;                  
                                        
: VISIT   ( adr -- )                    
    .CONCEPT  CR ;                      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 023
( TYPES?  DENOTES?    LRP   1/27/85 )   
                                        
: PLUNGE     ( -- n1 n2 ... n )         
    ( Assumes address of concept is)    
    ( stored in NODE.PTR. )             
    BEGIN                               
      NODE.PTR  @ LCHILD                
    WHILE                               
      NODE.PTR @ NODE.PTR @             
      LCHILD NODE.PTR !                 
    REPEAT ;                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 024
( TYPES?  DENOTES?   LRP    1/27/85 )   
                                        
1 CONSTANT EXIT-FLG                     
                                        
: STEPRT   ( -- flg )                   
    BEGIN                               
      NODE.PTR @ VISIT                  
      NODE.PTR @ RCHILD NODE.PTR !      
      NODE.PTR @                        
          IF                            
             EXIT-FLG NOT EXIT-FLG      
          ELSE                          
             DEPTH IF                   
                     NODE.PTR !         
                     EXIT-FLG NOT       
                   ELSE                 
                     EXIT-FLG EXIT-FLG  
                   THEN                 
          THEN                          
    UNTIL  ;                            
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 025
( TYPES?  DENOTES?     LRP   1/27/85 )  
                                        
: TRAV    (  -- )                       
     ( Assume head of list is stored    
       in ROOT )                        
     ROOT @                             
         IF                             
           ROOT @  NODE.PTR !           
           BEGIN                        
             PLUNGE                     
             STEPRT                     
           UNTIL                        
         THEN ;                         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 026
( TYPES?  DENOTES?    LRP    1/27/85 )  
                                        
: TYPES?  ( adr -- )                    
    SUPLIST                             
    CR SUPERTYPES @ ROOT !              
    TRAV ;                              
                                        
                                        
: DENOTES?  ( adr -- )                  
    SUBLIST                             
    CR SUBTYPES @ ROOT !                
    TRAV ;                              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 027
EXIT                                    
                                        
Now I will start on the interpreter for 
the linear representation of conceptual 
graphs. See Sowa p. 78 & p. 395.        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 028
( REF FIELDS      LRP    2/3/85 )       
                                        
1000 CONSTANT ALLOTMENT                 
( Allocation for NODES and REFS )       
                                        
VARIABLE NODESPACE ALLOTMENT  ALLOT     
( Space for nodes )                     
                                        
VARIABLE NODES                          
( Ptr to free space in NODESPACE )      
                                        
: RESET-NODES  ( -- )                   
    NODESPACE NODES ! ;                 
                                        
RESET-NODES                             
                                        
NODESPACE ALLOTMENT + CONSTANT -NODES   
( Upper limit of NODESPACE )            
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 029
( REF FIELDS      LRP    2/3/85 )       
                                        
VARIABLE REFSPACE ALLOTMENT  ALLOT      
( Space for referent strings )          
                                        
VARIABLE REFS                           
( Ptr to free space in REFSPACE )       
                                        
: RESET-REFS   ( -- )                   
    REFSPACE REFS  ! ;                  
                                        
RESET-REFS                              
                                        
REFSPACE ALLOTMENT + CONSTANT -REFS     
( Upper limit of REFSPACE )             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 030
( Range tests     LRP     2/3/85 )      
                                        
: NODES?  ( n -- ; where n is value )   
          ( to be added to NODES. )     
    NODES @ +                           
    -NODES SWAP - 0<                    
    ABORT" No room in NODESPACE " ;     
                                        
: REFS?  ( n -- ; where n is value )    
         ( to be added to REFS. )       
    REFS @ +                            
    -REFS SWAP - 0<                     
    ABORT" No room in REFSPACE " ;      
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 031
( GETNODE      LRP   2/3/85 )           
                                        
VARIABLE <CON>                          
( Ptr to current concept )              
                                        
VARIABLE <REL>                          
( Ptr to current relation )             
                                        
VARIABLE <GRAPH>                        
( Ptr to current graph )                
                                        
VARIABLE <GRAPHS>                       
( Ptr to list of graphs )               
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 032
( GETNODE      LRP   2/3/85 )           
                                        
: GETNODE  ( n -- adr of link )         
     ( Get link with n fields from      
       NODES. )                         
     DUP NODES?                         
     DUP NODES @ SWAP 0 FILL            
         NODES @ SWAP                   
         NODES +! ;                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 033
( REFS     LRP     2/3/85 )             
                                        
: REFPTR  ( adr -- ref.adr )            
     4 + ;                              
                                        
: INPTR  ( adr -- in.adr )              
     6 + ;                              
                                        
: OUTPTR  ( adr -- out.adr )            
     8 + ;                              
                                        
: !REF.ADR  ( adr -- )                  
     REFPTR  REFS @ SWAP ! ;            
                                        
: .REF   ( adr -- )                     
     ( Given adr of concept node,       
       prints referent string. )        
     REFPTR @ COUNT TYPE ;              
                                        
: .NODE   ( adr -- )                    
    ( Given adr of node, print          
      concept and referent. )           
    DUP .CONCEPT .REF ;                 
                                        
-------------------------------------------- SCREEN 034
( !GRAPH    LRP    2/9/85 )             
                                        
: NODE.APPEND  ( list.adr -- )          
    10 GETNODE                          
    SWAP APPEND ;                       
                                        
: !GRAPH   ( -- )                       
    ( Link graph pointed to by <CON>    
      to list pointed to by <GRAPHS> )  
    ( Link current graph to <GRAPH> )   
    4 GETNODE                           
    <GRAPHS> OVER PUT                   
    CON-PTR <CON> @ SWAP !              
    <CON> @ <GRAPH> ! ;                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 035
 ( .NODE     LRP   2/9/85 )             
EXIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 036
( REFS     LRP     2/3/85 )             
                                        
VOCABULARY CONGRAPHS                    
                                        
CONGRAPHS DEFINITIONS                   
                                        
: [    ( -- )                           
     <CON> NODE.APPEND                  
     FIND 2+ <CON> @ CON-PTR ! ;        
                                        
: (                                     
     <REL> NODE.APPEND                  
     FIND 2+ <REL> @ CON-PTR ! ;        
                                        
: :                                     
    93 WORD                             
    DUP C@ 1+                           
          DUP REFS?                     
          <CON> @  !REF.ADR             
          DUP ROT                       
          REFS @ ROT CMOVE              
          REFS +! ;                     
                                        
FORTH DEFINITIONS                       
-------------------------------------------- SCREEN 037
( ::    LRP    2/9/85 )                 
                                        
: ::  ( -- )                            
       ( Store REF string in REFSPACE ) 
     93 WORD                            
     DUP C@ 1+                          
               DUP REFS?                
               !REF.ADR                 
               DUP ROT                  
               REFS @ ROT CMOVE         
               REFS +! ;                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 040
( DATA       LRP  1/26/85 )             
                                        
POS NOUN                                
POS VERB                                
POS ADJECTIVE                           
POS ADVERB                              
POS DET                                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 041
( EXAMPLE ENTRIES    LRP   1/16/85 )    
                                        
                                        
CONCEPT FELINE                          
CONCEPT MAMMAL                          
CONCEPT ANIMATE                         
CONCEPT EARTHMOVER                      
CONCEPT INANIMATE                       
CONCEPT CANINE                          
                                        
FELINE IS-A MAMMAL                      
MAMMAL IS-A ANIMATE                     
EARTHMOVER IS-A INANIMATE               
CANINE IS-A MAMMAL                      
                                        
VOCAB cat                               
VOCAB tabby                             
VOCAB dog                               
                                        
NOUN cat MEANS FELINE                   
NOUN cat MEANS EARTHMOVER               
NOUN dog MEANS CANINE                   
                                        
                                        
-------------------------------------------- SCREEN 042
                                        
                                        
                                        
                                        
                                        
CONCEPT HOUSEPET                        
FELINE IS-A HOUSEPET                    
                                        
CONCEPT ENTITY                          
ANIMATE IS-A ENTITY                     
                                        
CONCEPT POSSESSION                      
HOUSEPET IS-A POSSESSION                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 060
( TEST WORDS    LRP   2/3/85 )          
                                        
" LLOYD"                                
" LAURIE"                               
" PHYLLIS"                              
" KATHARINE"                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
