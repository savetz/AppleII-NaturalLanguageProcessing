-------------------------------------------- SCREEN 000
( FEATURE LIST   LRP  7/27/85 )         
                                        
                                        
                                        
143 154 THRU                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
EXIT                                    
                                        
See Marcus, Mitchell P., A Theory of    
Syntactic Recognition of Natural        
Language, The MIT Press, Cambridge, MA.,
1980, pp 258                            
                                        
Routine takes 780 bytes                 
-------------------------------------------- SCREEN 001
( FEATURE LIST   LRP  7/27/85 )         
                                        
EXIT                                    
                                        
A features list is a 2(n+m+o)+1 array of
n+m+o executable addresses (CFAs). The  
first item in the array is a count of   
the number of addresses in the array.   
                                        
The first n addresses are tests of a    
data structure to determine whether     
or not a particular feature exists.     
It it does, the test returns 1, else it 
returns 0.                              
                                        
The next m addresses are the CFAs of    
either AND or OR. If the AND/OR-FLAG is 
true when the features list is compiled,
then AND relations are compiled.        
Otherwise, OR relations are compiled.   
                                        
The last address, o, is the CFA of      
either NOT or NOOP, depending upon      
                                        
-------------------------------------------- SCREEN 002
( FEATURE LIST   LRP  7/27/85 )         
                                        
EXIT                                    
                                        
whether or not the evaluation of the    
feature list should be negated. If      
NOT-FLAG is true when the feature list  
is compiled, then o is the CFA of NOT,  
else it is the CFA of NOOP.             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 003
( FEATURE LIST   LRP  7/27/85 )         
                                        
: FEATURES ;                            
                                        
VARIABLE HEAD                           
  ( Adr of features list. )             
                                        
VARIABLE AND/ORS                        
  ( Specifies how many AND/OR relations 
    in the features list. )             
                                        
VARIABLE AND/OR-FLAG                    
  ( 1 if AND relations; 0 if OR         
    relations. )                        
                                        
VARIABLE CONT-FLAG                      
  ( 0 to continue compilation,          
    1 to stop )                         
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 004
( FEATURE LIST   LRP  7/27/85 )         
                                        
VARIABLE NOT-FLAG                       
 ( If 1, negate feature list )          
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 005
( FEATURE LIST   LRP  7/27/85 )         
                                        
: COMMA?  ( adr -- f )                  
          ( is last char of packed      
            string at adr a comma?      
            If yes return 1 else 0. )   
   DUP C@ + C@ 44 = ;                   
                                        
: DEC-COUNT ( adr -- )                  
            ( replace last char of      
              string at adr with 0,     
              and decrement count of    
              string. )                 
   DUP DUP 0 SWAP C@ + C!               
   DUP C@ 1- SWAP C! ;                  
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 006
( FEATURE LIST   LRP  7/27/85 )         
                                        
: FIND,  ( e.g. FIND, <WORD> )          
  BL WORD                               
  DUP COMMA? IF                         
               DUP DEC-COUNT            
               1 AND/ORS +!             
             THEN                       
             CONTEXT @ @ 2+             
             CONTEXT @ 999 - <<FIND>    
             IF                         
               DROP CFA                 
             ELSE                       
               0                        
             THEN ;                     
                                        
EXIT                                    
                                        
If last char of <WORD> is a comma,      
replace comma with 0, decrement count   
of <WORD>, increment AND/ORS, and       
return CFA of <WORD>. If <WORD> is      
not found in the dictionary, return     
0.                                      
-------------------------------------------- SCREEN 007
( FEATURE LIST   LRP  7/27/85 )         
                                        
: INIT-FLIST    ( -- )                  
   ( Initializes a features list. )     
   1 AND/OR-FLAG !                      
   0 NOT-FLAG !                         
   0 AND/ORS !                          
   HERE HEAD !                          
   0 C, ;                               
                                        
: INC-FLIST-COUNT   ( -- )              
   ( Increment features list count )    
   HEAD @ DUP C@ 1+ SWAP C! ;           
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 008
( FEATURE LIST   LRP  7/27/85 )         
                                        
: ,AND/ORS   ( -- )                     
   AND/ORS @ 0 DO                       
                 INC-FLIST-COUNT        
                 AND/OR-FLAG @          
                 IF                     
                   ' AND CFA ,          
                 ELSE                   
                   ' OR CFA ,           
                 THEN                   
                LOOP ;                  
                                        
EXIT                                    
                                        
Depending upon state of AND/OR-FLAG,    
compiles AND or OR relations at end     
of features list. Value stored in       
AND/ORS specifies how many relations    
to compile.                             
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 009
( FEATURE LIST   LRP  7/27/85 )         
                                        
: ,NOT   ( -- )                         
   INC-FLIST-COUNT                      
   NOT-FLAG @                           
   IF                                   
     ' NOT CFA ,                        
   ELSE                                 
     ' NOOP CFA ,                       
   THEN ;                               
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 010
( FEATURE LIST   LRP  7/27/85 )         
                                        
: MORE   ( -- )                         
   0 CONT-FLAG ! ;                      
                                        
: NO-MORE  ( -- )                       
   1 CONT-FLAG ! ;                      
                                        
: ANY  ( -- )                           
   0 AND/OR-FLAG ! ;                    
                                        
: /NOT  ( -- )                          
   1 NOT-FLAG ! ;                       
                                        
: NONE  ( -- )                          
   1 NOT-FLAG !                         
   0 AND/OR-FLAG ! ;                    
                                        
: OF  ;                                 
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 011
( FEATURE LIST   LRP  7/27/85 )         
                                        
: ,FEATURE  ( adr -- )                  
  DUP ' ANY CFA  = IF                   
                     DROP               
                     ANY MORE      ELSE 
  DUP ' /NOT CFA = IF                   
                     DROP               
                     /NOT MORE     ELSE 
  DUP ' NONE CFA = IF                   
                     DROP               
                     NONE MORE     ELSE 
  DUP ' OF CFA   = IF                   
                     DROP               
                     MORE          ELSE 
                   , INC-FLIST-COUNT    
                   THEN THEN THEN THEN ;
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 012
( FEATURE LIST   LRP  7/27/85 )         
                                        
EXIT                                    
                                        
The following word, IS, compiles a      
feature list at HERE. The address of the
list is stored in HEAD. QQ, on screen   
154, is an example of how to evaluate   
the feature list.                       
                                        
 e.g. IS (all of) <feature list>        
      IS ANY OF <feature list>          
      IS NOT (all of) <feature list>    
      IS NOT ANY OF <feature list>      
      IS NONE OF <feature list>         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 013
( FEATURE LIST   LRP  7/27/85 )         
                                        
: IS     ( -- )                         
   INIT-FLIST                           
   BEGIN                                
    NO-MORE                             
    AND/ORS @                           
    FIND, DUP IF                        
                ,FEATURE                
              ELSE                      
                ." Undefined feature"   
                ABORT                   
              THEN                      
    AND/ORS @   <                       
    IF  MORE  THEN                      
  CONT-FLAG @                           
  UNTIL                                 
  AND/ORS @ IF                          
              ,AND/ORS                  
            THEN                        
            ,NOT ;                      
                                        
                                        
                                        
-------------------------------------------- SCREEN 014
( FEATURE LIST   LRP  7/27/85 )         
                                        
: QQ     ( -- )                         
    HEAD @                              
    C@ 0 DO                             
            I 2 * HEAD @ + 1+           
            @ EXECUTE                   
         LOOP ;                         
                                        
: Q                                     
    HEAD @                              
    COUNT                               
    0 DO DUP I 2* + @ EXECUTE /LOOP     
    DROP ;                              
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 060
( FEATURES 2     LRP  7/29/85 )         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 061
( FEATURES 2     LRP  7/29/85 )         
                                        
: (LOOK-UP)   ( table adr value --      
                found-adr/table adr )   
   OVER                                 
   COUNT                                
   OVER + SWAP DO                       
                 DUP I C@ =             
                 IF                     
                   SWAP DROP            
                   I SWAP LEAVE         
                 THEN                   
               LOOP DROP ;              
                                        
: LOOK-UP  ( defining: #entries -- )    
   CREATE  C,                           
   DOES>                                
    DUP ROT (LOOK-UP) SWAP - ;          
                                        
EXIT                                    
See Basile, James, "Implementing Data   
Structures in FORTH", The Journal of    
Appl. and Research, Vol. 1, No. 2,      
DEC. 1983, p. 5                         
-------------------------------------------- SCREEN 062
( FEATURES 2     LRP  7/29/85 )         
                                        
( Example: )                            
                                        
  5 LOOK-UP ?VOWEL 65 C, 69 C, 73 C,    
                   79 C, 85 C,          
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 063
( FEATURES 2     LRP  7/29/85 )         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 064
( FEATURES 2     LRP  7/29/85 )         
                                        
EXIT                                    
                                        
The next version of LOOK-UP is for      
word-length data                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 065
( FEATURES 2     LRP  7/29/85 )         
                                        
: (2LOOK-UP)   ( table adr value --     
                 found-adr/table adr )  
   OVER                                 
   COUNT                                
   OVER + SWAP DO                       
                 DUP I @ =              
                 IF                     
                   SWAP DROP            
                   I SWAP LEAVE         
                 THEN                   
               2 +LOOP DROP ;           
                                        
: 2LOOK-UP  ( defining: #entries -- )   
   CREATE  2* C,                        
   DOES>                                
    DUP ROT (2LOOK-UP) SWAP - 1+ 2/ ;   
                                        
EXIT                                    
See Basile, James, "Implementing Data   
Structures in FORTH", The Journal of    
Appl. and Research, Vol. 1, No. 2,      
DEC. 1983, p. 5                         
-------------------------------------------- SCREEN 066
( FEATURES 2    LRP   7/29/85 )         
                                        
                                        
( Example: )                            
                                        
 5 2LOOK-UP TEST   10 , 20 , 30 , 40 ,  
                   50 ,                 
                                        
3 2LOOK-UP OPERATORS ' AND CFA ,        
                     ' OR CFA ,         
                     ' NOT CFA ,        
                                        
CREATE PRIORITIES 0 , 2 , 3 , 2 ,       
                                        
: PRIORITY                              
    OPERATORS 2* PRIORITIES + @ ;       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 071
                                        
                                        
EXIT                                    
                                        
PRIORITY TABLE                          
                                        
            IN-STACK   INCOMING         
OPERATOR    PRIORITY   PRIORITY         
                                        
   )          --          --            
   NOT         3           4            
   AND         2           2            
   OR          1           1            
   (           0           4            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 110
( FEATURES 2     LRP  7/29/85 )         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 111
( FEATURES 2     LRP  7/29/85 )         
                                        
: (2LOOK-UP)   ( table adr value --     
                 found-adr/table adr )  
   OVER                                 
   COUNT                                
   OVER + SWAP DO                       
                 DUP I @ =              
                 IF                     
                   SWAP DROP            
                   I SWAP LEAVE         
                 THEN                   
               2 +LOOP DROP ;           
                                        
: 2LOOK-UP  ( defining: #entries -- )   
   CREATE  2* C,                        
   DOES>                                
    DUP ROT (2LOOK-UP) SWAP - 1+ 2/ ;   
                                        
EXIT                                    
See Basile, James, "Implementing Data   
Structures in FORTH", The Journal of    
Appl. and Research, Vol. 1, No. 2,      
DEC. 1983, p. 5                         
-------------------------------------------- SCREEN 112
( FEATURES 2    LRP   7/29/85 )         
                                        
: .( ;    : ). ;                        
                                        
5 2LOOK-UP OPERATORS ' NOT CFA ,        
                     ' AND CFA ,        
                     ' OR  CFA ,        
                     ' .(  CFA ,        
                     ' ).  CFA ,        
                                        
: PRIORITIES  ( defining                
              ( n -- n )                
    CREATE                              
      0 ,                               
      0 DO                              
         BL WORD NUMBER DROP ,          
        LOOP                            
    DOES>                               
      SWAP 2* + @ ;                     
                                        
4 PRIORITIES (ISP) 3 2 1 0              
4 PRIORITIES (ICP) 4 2 1 4              
                                        
                                        
-------------------------------------------- SCREEN 113
( FEATURES 2    LRP   7/29/85 )         
                                        
: ISP  ( n -- n )                       
   OPERATORS                            
   (ISP) ;                              
                                        
: ICP  ( n -- n )                       
   OPERATORS                            
   (ICP) ;                              
                                        
EXIT                                    
                                        
Given the CFA of a FORTH word, ISP      
returns the                             
in-stack priority ( See Horowitz,       
Ellis and Sartaj Sahni, Fundamentals of 
Data Structures, Computer Science Press,
Inc., 1976, p 96) if the word is defined
as an operator by OPERATORS, else it    
returns 0. ICP returns the in-coming    
priority of the operator.               
                                        
                                        
                                        
-------------------------------------------- SCREEN 114
( FEATURES 2    LRP   7/29/85 )         
                                        
: ,TO-OUT   ( n ... n -- )              
     ( , until stack empty )            
     BEGIN                              
       DEPTH                            
     WHILE                              
       ,                                
     REPEAT ;                           
                                        
: ,TO.(     ( n ... n -- n )            
    ( , until CFA for .( )              
    BEGIN                               
      DUP ' .( CFA = NOT                
    WHILE                               
      ,                                 
    REPEAT DROP ;                       
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 115
( FEATURES 2    LRP   7/29/85 )         
                                        
: ,TO-ISP<ICP    ( n n n -- n )         
    ( , until ISP < ICP )               
    BEGIN                               
      DEPTH  1 > IF                     
                   DDUP                 
                   ICP  SWAP ISP <      
                 ELSE                   
                   0                    
                 THEN                   
    WHILE                               
      SWAP ,                            
    REPEAT ;                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 116
( FEATURES 2    LRP   7/29/85 )         
                                        
: ]. ;                                  
                                        
: .[                                    
    BEGIN                               
      FIND DUP                          
      ' ]. CFA = NOT                    
    WHILE                               
      DUP OPERATORS  NOT IF   ,   ELSE  
      DUP ' ). CFA =     IF DROP        
                            ,TO.(       
                                  ELSE  
                            ,TO-ISP<ICP 
                         THEN THEN      
    REPEAT                              
    DROP                                
    ,TO-OUT ;                           
                                        
: Q  DO I @ EXECUTE 2 +LOOP ;           
                                        
                                        
                                        
                                        
